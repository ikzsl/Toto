{"version":3,"sources":["components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["TodoListItem","this","props","label","onDeleted","onToggleImportant","onToggleDone","classNameDone","isDone","classNameImportant","isImportant","className","onClick","type","style","color","Component","TodoList","todos","elements","map","item","id","itemProps","key","AppHeader","toDo","done","SearchPanel","state","term","onSearchChange","e","target","value","setState","fontSize","placeholder","disabled","onChange","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","preventDefault","onSubmit","onAdd","App","startId","todoData","createTodoItem","toggleProperty","addItem","newItem","deleteItem","search","items","length","toLowerCase","includes","important","arr","propName","idx","findIndex","el","oldItem","slice","visibleItems","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf41b682.chunk.js","sourcesContent":["import TodoListItem from './todo-list-item';\nexport default TodoListItem;","import React, { Component } from 'react';\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n    render() {\n        const {\n            label,\n            onDeleted,\n            onToggleImportant,\n            onToggleDone,\n            isDone,\n            isImportant\n        } = this.props;\n\n        let classNameDone = isDone ? 'done' : null;\n        let classNameImportant = isImportant ? 'important' : null;\n\n        return (\n            <span className={`todo-list-item ${classNameDone} ${classNameImportant}`}>\n                <span\n                    className='todo-list-item-label'\n                    onClick={onToggleDone}>\n                    {label}\n                </span>\n                <span>\n                    <button\n                        type='button'\n                        onClick={onToggleImportant}\n                        className='btn btn-outline-success btn-sm float-right '>\n                        <i className='fa fa-exclamation' />\n                    </button>\n                    <button\n                        type='button'\n                        onClick={onDeleted}\n                        className='btn btn-outline-success btn-sm fa'>\n                        <i className='fa fa-trash-o' style={{ color: \"red\" }} />\n                    </button>\n                </span>\n            </span >\n        );\n    };\n}","import TodoList from './todo-list';\nexport default TodoList;","import React from 'react';\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\n\n    const elements = todos.map((item) => {\n        const {id, ...itemProps} = item;\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem\n                    {...itemProps}\n                    onDeleted={() => onDeleted(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleDone={() => onToggleDone(id)}\n                />\n            </li>\n        );\n    });\n\n    return (\n        <ul className=\"list-group todo-list\">\n            {elements}\n        </ul>\n    );\n};\n\nexport default TodoList;","import AppHeader from './app-header';\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({ toDo, done }) => {\n    return (\n        <div className='app-header d-flex'>\n            <h1>Todo list</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n\n    );\n};\n\nexport default AppHeader;","import SearchPanel from './search-panel';\nexport default SearchPanel;","import React, {Component} from 'react';\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n    state = {\n        term: '',\n    };\n\n    onSearchChange = (e) => {\n        const term = e.target.value;\n        this.setState({term});\n        this.props.onSearchChange(term)\n    };\n\n\n    render() {\n        const searchText = 'searchText';\n        const searchstyle = {\n            fontSize: '25px'\n        };\n        return (\n            <input\n                type=\"text\"\n                className='search-input form-control'\n                style={searchstyle} placeholder={searchText}\n                disabled={false}\n                onChange={this.onSearchChange}\n                value={this.state.term}/>\n        );\n    }\n};\n","import ItemStatusFilter from './item-status-filter';\nexport default ItemStatusFilter;","import React, {Component} from 'react';\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        {name: 'all', label: 'All',},\n        {name: 'active', label: 'Active',},\n        {name: 'done', label: 'Done',},\n    ];\n    \n\n    render() {\n        const {filter, onFilterChange} = this.props;\n        const buttons = this.buttons.map(\n            ({name, label}) => {\n                const isActive = filter === name;\n                const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n                return <button\n                    key={name}\n                    type='button'\n                    className={`btn ${clazz}`}\n                    onClick={() => onFilterChange(name)}>\n                    {label}\n                </button>\n            });\n\n\n        return <div className='btn-group'>{buttons}</div>;\n    }\n\n};\n\n","import ItemAddForm from './item-add-form';\nexport default ItemAddForm;","import React, {Component} from 'react';\nimport './item-add-form.css'\n\n\nexport default class ItemAddForm extends Component {\n\n    state = {\n        label: \"\",\n    };\n\n    onLabelChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            label: e.target.value,\n        })\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(!this.state.label) {\n            return;\n        }\n        this.props.onAdd(this.state.label);\n        this.setState({\n            label: \"\",\n        });\n    };\n\n    render() {\n        return (\n            <form className=\"item-add-form d-flex\"\n                  onSubmit={this.onSubmit}>\n                <input\n                    type=\"text\"\n                    className=\"form--control\"\n                    onChange={this.onLabelChange}\n                    placeholder=\"What needs  to be done\"\n                    value={this.state.label}/>\n                <button\n                    className='btn btn-outline-secondary'>\n                    Add item\n                </button>\n            </form>\n        );\n    };\n}\n","import App from './app';\nexport default App;","import React, {Component} from 'react';\n\nimport TodoList from '../todo-list';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\n\nimport './app.css'\n\nexport default class App extends Component {\n\n    startId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Create React App'),\n            this.createTodoItem('Have a Lunch'),\n        ],\n        term: '',\n        filter: 'all', //all, active, done\n    };\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            id: this.startId++,\n            isDone: false,\n        }\n    }\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n        const oldItem = arr[idx];\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ];\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'isDone'),\n            };\n        });\n    };\n\n    onToggleImportant = (id) => {\n        this.setState(\n            ({todoData}) => {\n                return {\n                    todoData: this.toggleProperty(todoData, id, 'isImportant'),\n                };\n            });\n    };\n\n    addItem = (label) => {\n        this.setState(\n            ({todoData}) => {\n                const newItem = this.createTodoItem(label);\n                const newArray = [...todoData, newItem];\n                return {todoData: newArray};\n            }\n        );\n    };\n\n    deleteItem = (id) => {\n        this.setState(\n            ({todoData}) => {\n                const newArray = todoData.filter((item) => item.id !== id);\n                return {todoData: newArray}\n            }\n        );\n    };\n\n    onSearchChange = (term) => {\n        this.setState({term});\n    };\n\n    search = (items, term) => {\n        if (term.length === 0) {\n            return items;\n        }\n        return items.filter(\n            (item) => item.label\n                .toLowerCase()\n                .includes(term.toLowerCase())\n        );\n    };\n\n    onFilterChange = (filter) => {\n        this.setState({filter})\n    };\n\n    filter = (items, filter) => {\n        switch (filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter((item) => !item.isDone);\n            case 'done':\n                return items.filter((item) => item.isDone);\n            default:\n                return items;\n        }\n    };\n\n    render() {\n        const {todoData, term, filter} = this.state;\n\n        const visibleItems = this.filter(\n            this.search(todoData, term), filter);\n        const doneCount = todoData.filter((item) => item.isDone).length;\n        const todoCount = todoData.length - doneCount;\n\n        return (\n            <div className='todo-app'>\n                <AppHeader toDo={todoCount} done={doneCount}/>\n                <ItemStatusFilter\n                    filter={filter}\n                    onFilterChange={this.onFilterChange}/>\n\n                <div className='top-panel d-flex'>\n                    <SearchPanel\n                        onSearchChange={this.onSearchChange}/>\n\n                </div>\n                <TodoList\n                    todos={visibleItems}\n                    onDeleted={this.deleteItem}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone}\n                />\n                <ItemAddForm\n                    onAdd={this.addItem}/>\n            </div>\n        );\n    };\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n    document.getElementById('root'));\n    "],"sourceRoot":""}